name: Integration Tests
on:
  workflow_dispatch:
  pull_request:
    paths:
      - .github/workflows/integration-tests.yml
      - assets/**
      - integration_test/**
      - lib/**
      - test_driver/**
      - pubspec.lock
      - pubspec.yaml
      - android/**
      - ios/**
      - macos/**
      - web/**
jobs:
  # Detect changes
  changes:
    name: Check for changes
    runs-on: ubuntu-latest
    outputs:
      android: ${{ steps.filter.outputs.all || steps.filter.outputs.android }}
      ios: ${{ steps.filter.outputs.all || steps.filter.outputs.ios }}
      macos: ${{ steps.filter.outputs.all || steps.filter.outputs.macos }}
      web: ${{ steps.filter.outputs.all || steps.filter.outputs.web }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Check for changes
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            all:
              - .github/workflows/integration-tests.yml
              - assets/**
              - integration_test/**
              - lib/**
              - test_driver/**
              - pubspec.lock
              - pubspec.yaml
            android:
              - android/**
            ios:
              - ios/**
            macos:
              - macos/**
            web:
              - web/**

  # Run integration tests on Android
  android:
    name: Android
    needs: changes
    if: ${{ needs.changes.outputs.android == 'true' }}
    runs-on: macos-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        api-level: [21, 30]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install flutter
        uses: subosito/flutter-action@v1
      - name: Set up keystore
        run: echo '${{ secrets.ANDROID_STORE }}' | base64 --decode > android/app/key.jks
      - name: Run tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          target: google_apis
          arch: x86_64
          profile: pixel
          script: |
            flutter doctor -v
            flutter drive --driver=test_driver/integration_test.dart --target=integration_test/app_test.dart
        env:
          ANDROID_STORE_PASSWORD: ${{ secrets.ANDROID_STORE_PASSWORD }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_STORE_FILE: key.jks

  # Run integration tests on iOS
  ios:
    name: iOS
    needs: changes
    if: ${{ needs.changes.outputs.ios == 'true' }}
    runs-on: macos-latest
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        device:
          - iPhone 12 (14.4)
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install flutter
        uses: subosito/flutter-action@v1
      - name: List simulators
        run: xcrun instruments -s
      - name: Start simulator
        run: |
          UDID=$(
            xcrun instruments -s |
            awk \
              -F ' *[][]' \
              -v 'device=${{ matrix.device }}' \
              '$1 == device { print $2 }'
          )
          xcrun simctl boot "${UDID:?No Simulator with this name found}"
      - name: Run flutter doctor
        run: flutter doctor -v
      - name: Run tests
        run: flutter drive --driver=test_driver/integration_test.dart --target=integration_test/app_test.dart

  # Run integration tests on macOS
  macos:
    name: macOS
    needs: changes
    # TODO: Reenable after figuring out automatic xcode signing
    if: "false"
    # if: ${{ needs.changes.outputs.macos == 'true' }}
    runs-on: macos-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install flutter
        uses: subosito/flutter-action@v1
      - name: Run flutter doctor
        run: |
          flutter config --enable-macos-desktop
          flutter doctor -v
      - name: Run tests
        run: flutter drive --driver=test_driver/integration_test.dart --target=integration_test/app_test.dart -d macos

  # Run integration tests on the web
  web:
    name: Web
    needs: changes
    if: ${{ needs.changes.outputs.web == 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install flutter
        uses: subosito/flutter-action@v1
      - name: Start web server
        run: chromedriver --port=4444 &
      - name: Run flutter doctor
        run: flutter doctor -v
      - name: Run tests
        run: flutter drive --driver=test_driver/integration_test.dart --target=integration_test/app_test.dart -d web-server
